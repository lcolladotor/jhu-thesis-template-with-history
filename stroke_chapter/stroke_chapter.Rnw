
<<knit-setup, echo=FALSE, results='hide'>>=
library(knitr)
opts_chunk$set(echo=FALSE, prompt=FALSE, message=FALSE, warning=FALSE, comment="", results='hide')
@

<<echo=FALSE, results='hide', eval=TRUE>>=
cat(strwrap(paste(sort(rownames(installed.packages())), collapse=", "), width=80), sep='\n')

@

<<echo=FALSE>>=
rm(list=ls())
library(ggplot2)
library(xtable)
library(gridExtra) 
library(stringr)
library(plyr)
check.na = function(x){
  stopifnot(all(!is.na(x))) 
}
imag = read.csv("Imaging_Information.csv")
imag$patientName = imag$id
imag$id = NULL
alldemog = read.csv("All_180_FollowUp_wDemographics.csv")
alldemog$Diagnostic_IVH = round(alldemog$IVH_Dx_10 *10, 7)
alldemog = alldemog[, c("patientName", "Diagnostic_IVH")]
demog = read.csv("Demog_NIHSS_Mask.csv")
demog = merge(demog, imag, all=TRUE)
demog = merge(demog, alldemog, all.x=TRUE)
N = nrow(demog)
check.na(demog$Sex)
sum.fem = sum(demog$Sex == "Female")
pct.fem = round(mean(demog$Sex == "Female")*100, 1)
check.na(demog$Age)
r.age = range(demog$Age)
m.age = round(mean(demog$Age), digits = 1)
demog$Base_ICH_10 = demog$Diagnostic_ICH / 10

m.ich = round(mean(demog$Diagnostic_ICH), digits=1)
med.ich = round(median(demog$Diagnostic_ICH), digits=1)


# hist(demog$Age, breaks=seq(30, 80, by=5))
##############################################
### get the N for the cetner and each trial
demog$study = c("MISTIE", "ICES")[(demog$patientName %% 1000 > 500)+1]
n.mistie = sum(demog$study == "MISTIE")
n.ices = sum(demog$study == "ICES")
demog$ctr = floor(demog$patientName/ 1000)
n.ctr = length(unique(demog$ctr))
##############################################

##############################################
### variable slice thickness and gantry tilt correction
check.na(demog$nslices)

n.var.slice = sum(demog$nslices > 1)
check.na(demog$tilt)
n.gant = sum(demog$tilt != 0)
##############################################

##############################################
# get range for NIHSS
no.nihss = sum(is.na(demog$Enrollment_NIHSS_Total))
r.nihss = range(demog$Enrollment_NIHSS_Total, na.rm=TRUE)
m.nihss = round(mean(demog$Enrollment_NIHSS_Total, na.rm=TRUE), digits = 1)
##############################################

##############################################
# get range for GCS
no.gcs = sum(is.na(demog$Enrollment_GCS_Add))
r.gcs = range(demog$Enrollment_GCS_Add, na.rm=TRUE)
m.gcs = round(mean(demog$Enrollment_GCS_Add, na.rm=TRUE), digits = 1)
##############################################


##############################################
### get the types of scanners
check.na(demog$man)
man.tab = sort(table(demog$man), decreasing=TRUE)
stopifnot(length(man.tab) == 4)
manu= names(man.tab)
manu[manu == 'TOSHIBA'] = "Toshiba"
manu[manu == 'SIEMENS'] = "Siemens"
##############################################


##############################################
# Functions for demographic table
##############################################
mean.sd = function(x, na.rm=FALSE, digits=1){
  mn = round(mean(x, na.rm=na.rm), digits)
  sd = round(sd(x, na.rm=na.rm), digits)
  fmt = paste0("%.", digits, "f")
  mn = sprintf(fmt, mn)
  sd = sprintf(fmt, sd)
  paste0(mn, " (", sd, ")")
}

NPCT = function(x, digits = 1){
  check.na(x)
  tab = sort(table(x), decreasing=TRUE)
  ptab = round(prop.table(tab)*100, digits)
  tab = paste0(tab, " (", ptab, "%)")
  names(tab) = names(ptab)
  return(tab)
}
n.pct = function(x, values=NULL, digits=1){
  tab = NPCT(x=x, digits = digits)
  if (!is.null(values)) {
    tab = tab[values]
    names(tab) = NULL
  } else {
    names(tab) = paste("\\text{  }", names(tab))
    tab = c("", tab)
  }
  tab
}

sfunc <- function(x){
  x <- gsub("%", "\\%", x, fixed=TRUE)
  x <- gsub("ZZZ", "\\;\\;", x, fixed=TRUE)
  x <- gsub("<=", "$\\leq$", x, fixed=TRUE)
  x <- gsub(">=", "$\\geq$", x, fixed=TRUE)
  x <- gsub("<", "$<$", x, fixed=TRUE)
  x <- gsub(">", "$>$", x, fixed=TRUE)
}

b.sfunc <- function(x){
  x = sfunc(x)
  x = paste0("{\\bf ", x, "}")
}

b.sfunc <- function(x){
  x = sfunc(x)
  x = paste0("{", x, "}")
}



load('Voxel_Info.Rda')


@


<<runres_func>>=
runres = function(){
    res = reses$adj.r.squared
    makeres = function(res, colname, digits=3, yes=TRUE) {
        wc.adj = res[1,"With_Clot"]
        cn = c("With_Perc", "nkeep", "pval")
        res = res[, cn]
        # res = res[1:nrow(res),] 
        res = rbind(c(wc.adj, rep(NA, ncol(res)-1)), res)
        colnames(res) = c(colname, "N_Voxels", "P.value")
        res = as.data.frame(res)
        res[, colname] = round(res[, colname], digits)
        if (yes) res[, colname] = sprintf(paste0("%0", digits+1, ".", digits, "f"), res[, colname])
        res[, "P.value"] = sprintf(paste0("%.", 4, "f"), res[, "P.value"])
        res[, "P.value"] = gsub("^0", "", res[, "P.value"])
        res[, "N_Voxels"] = str_trim(sprintf("%8.0f", res[, "N_Voxels"]))
        res[1, c("N_Voxels", "P.value")] = NA
        return(res)
    }
    
    res.adj = makeres(reses$adj.r.squared, "Adjusted R2")
    res.r2 = makeres(reses$r.squared, "R2")
    res.sd = makeres(reses$sigma, "RMSE")
    aic = makeres(aics, "AIC", yes=FALSE)
    aic$AIC = aic$AIC - min(aic$AIC)
    aic$AIC = round(aic$AIC, 2)
    
    epic = makeres(epics, "EPIC", yes=FALSE)
    epic$EPIC = epic$EPIC - min(epic$EPIC)
    epic$EPIC = round(epic$EPIC, 2) 
    
    results = merge(res.adj, res.r2)
    results = merge(results, aic)
    #results = merge(results, epic)
    results = merge(results, res.sd)
    results = results[order(results$P.value, na.last = FALSE),]
    
    results[1,"N_Voxels"] = "Location Model"
    
    # colnames(results) = c("Number of Voxels", "P-value", "Adjusted $R^2$", "$R^2$", "EPIC", "RMSE")

    colnames(results) = c("Number of Voxels", "P-value", "Adjusted $R^2$", "$R^2$", "AIC", "RMSE")    
    return(results)
}
@


<<get_best>>=
get.best = function(results){
    res = results
    cn = colnames(results)
    cn = cn[ ! cn%in% c("Number of Voxels", "P-value")]
    for (icol in cn) results[, icol] = as.numeric(results[, icol])
    x1 = sapply(-results[, c("Adjusted $R^2$", "$R^2$")], rank)
    x2 = sapply(results[, c("AIC", "RMSE")], rank)
    x = data.frame(cbind(x1, x2))
    best = sapply(x, function(z) which(z == 1))
    stopifnot(length(unique(best)) == 1)
    best = best[1]
    best.mod = results[best,]
    # stopifnot(best.mod[, "P-value"] == .01)
    loc = res[res[, "Number of Voxels"] == "Location Model",]
    return(list(best.mod=best.mod, loc.mod = loc))
}

@
<<runnihss>>=
load('Regress_ROI_NIHSS_Results.Rda')
results = runres()
nihss.res = results
lres = get.best(results)
nihss.best = lres$best.mod
nihss.loc = lres$loc.mod
nihss.bestr2 = nihss.best$"$R^2$"
nihss.bestar2 = nihss.best$"Adjusted $R^2$"
nihss.locr2 = as.numeric(nihss.loc$"$R^2$")
nihss.locar2 = as.numeric(nihss.loc$"Adjusted $R^2$")
nihss.rat = sprintf("%.0f", (nihss.bestr2 / nihss.locr2 - 1) * 100)
nihss.arat = sprintf("%.0f", (nihss.bestar2 / nihss.locar2 - 1) * 100)

@



<<rungcs>>=
load('Regress_ROI_GCS_Results.Rda')
results = runres()
gcs.res = results
lres = get.best(results)
gcs.best = lres$best.mod
gcs.loc = lres$loc.mod
gcs.bestr2 = gcs.best$"$R^2$"
gcs.bestar2 = gcs.best$"Adjusted $R^2$"
gcs.locr2 = as.numeric(gcs.loc$"$R^2$")
gcs.locar2 = as.numeric(gcs.loc$"Adjusted $R^2$")
gcs.rat = sprintf("%.0f", (gcs.bestr2 / gcs.locr2 - 1) * 100)
gcs.arat = sprintf("%.0f", (gcs.bestar2 / gcs.locar2 - 1) * 100)

@


<<>>=

fname = "reoriented_Binary_Sum_Image_histogram_data.rda"
load(fname)

pimg = df$x

nvox40 = sum(pimg > .4)
props = pimg[pimg > 0]
mn.prop = round(mean(props)*100)
md.prop = round(median(props)*100)
n.md.prop = round(median(props) * N, 2)

@


<<histdem>>=
##############################################
# plots of breakdowns of demographics
gsex = ggplot(demog, aes(Sex)) + geom_histogram() + ylab("Frequency") + 
  ggtitle("Distribution of Sex")

ggcs = ggplot(demog, aes(Enrollment_GCS_Add)) + geom_histogram(binwidth =.5) + ylab("Frequency") + xlab("GCS Score") +
  ggtitle("Distribution of GCS Score")

gage = ggplot(demog, aes(Age)) + geom_histogram(binwidth=5) + ylab("Frequency") +
  ggtitle("Distribution of Age") + xlab("Age (Years)")

gich = ggplot(demog, aes(Diagnostic_ICH)) + geom_histogram(binwidth=5) + 
  ylab("Frequency") +
  ggtitle("Distribution of ICH Volume") + 
  xlab("Baseline ICH Volume (cc)")

gnihss = ggplot(demog, aes(Enrollment_NIHSS_Total)) + geom_histogram(binwidth=2) + 
  ylab("Frequency") +
  ggtitle("Distribution of NIHSS Score") + 
  xlab("NIHSS Score")
  
pdf("histdem.pdf", width=6, height=4.5)
grid.arrange( gage, gich, ggcs, gnihss, ncol=2)
dev.off()
##############################################
@


<<demog_tab>>=

##############################################
# Demographic Table
# demog$ICH_Volume
addbf = ""
colname = paste0("{", addbf, " N (%) or Mean (SD)}")
female =  as.character(round(prop.table(table(demog$Sex))*100, 1)["Female"])
vec= c("Age in Years: Mean (SD)" = mean.sd(demog$Age),
       "Female" = n.pct(demog$Sex, "Female"),
#       "NIHSS Score: Mean (SD)" = mean.sd(demog$Enrollment_NIHSS_Total, na.rm=TRUE), 
#       "GCS Score: Mean (SD)" = mean.sd(demog$Enrollment_GCS_Add, na.rm=TRUE),
       "ICH Volume: Mean (SD)" = mean.sd(demog$Diagnostic_ICH, na.rm=TRUE), 
       "IVH Volume: Mean (SD)" = mean.sd(demog$Diagnostic_IVH, na.rm=TRUE)
       )
race = n.pct(demog$Ethnicity)
names(race)[1] = "Race"
# vec = c(vec, race)
demog$Clot = demog$Clot_Location_RC
demog$Clot = gsub("Palidus", "Pallidus", demog$Clot)
clot = n.pct(demog$Clot)
clottab = sort(table(demog$Clot), decreasing = TRUE)
clottab = paste0(tolower(names(clottab)), " ($N{=}", clottab, "$)")
clottab[length(clottab)] = paste0("and ", clottab[length(clottab)])
clottab = paste(clottab, collapse = ", ")

names(clot)[1] = "Reader-Classified ICH Location"
vec = c(vec, clot)

df = data.frame(vec, stringsAsFactors=FALSE)
colnames(df) = colname

addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- -1
addtorow$command <- paste0("\\hline {", addbf, " Variable (N=", N, ")}")

# paste0("Descriptive statistics of the demographic",
# " and ICH information for the patients in this study.")
xtab = xtable(df, 
              caption= "", align=c("lc"),
              label="t:dem")
print.xtable(xtab, file="demographics.tex", sanitize.rownames.function=sfunc, add.to.row=addtorow, hline.after = c(0:nrow(xtab)), sanitize.colnames.function=sfunc)

# paste0("Descriptive statistics of the demographic",
# " information for the patients.")
xtab = xtable(df, 
              caption= "", align=c("lc"),
              label="t:dem")
print.xtable(xtab, file="demographics.tex", sanitize.rownames.function=sfunc, add.to.row=addtorow, hline.after = c(0:nrow(xtab)), sanitize.colnames.function=sfunc)
##############################################

@


<<demog_tab_short>>=

##############################################
# Demographic Table
colname = paste0("{", addbf, " N (%) or Mean (SD)}")
vec= c("Age in Years: Mean (SD)" = mean.sd(demog$Age),
       "NIHSS Score: Mean (SD)" = mean.sd(demog$Enrollment_NIHSS_Total, na.rm=TRUE))
demog$Clot = demog$Clot_Location_RC
demog$Clot = gsub("Palidus", "Pallidus", demog$Clot)
clot = n.pct(demog$Clot_Location_RC)
names(clot)[1] = "Reader-Classified ICH Location"
vec = c(vec, clot)

df = data.frame(vec, stringsAsFactors=FALSE)
colnames(df) = colname

addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- -1
addtorow$command <- paste0("\\hline {", addbf, " Variable (N = ", N, ")}")

# paste0("Descriptive statistics of the demographic",
# " information for the patients.")
xtab = xtable(df, 
              caption= "", align=c("lc"),
              label="t:dem")
print.xtable(xtab, file="demographics_short.tex", sanitize.rownames.function=sfunc, add.to.row=addtorow, hline.after = c(0:nrow(xtab)), sanitize.colnames.function=sfunc)

@




%\newpage 
%%\section{Title Page}
%\begin{flushleft}
%{\Large
%\textbf{Quantitative Localization of Supratentorial Intracranial Hemorrhage}
%}
%\\
%John Muschelli$^{1,\ast}$, ScM;
%Natalie L. Ullman$^{2}$, BS;
%Elizabeth M. Sweeney$^{1}$, ScM;
%Ani Eloyan$^{1}$, PhD; 
%Neil Martin$^{3}$, MD;
%Paul Vespa$^{3}$, MD;
%Daniel F. Hanley$^{2}$, MD;
%Ciprian M. Crainiceanu$^{1}$, PhD
%\\
%\bf{1} Department of Biostatistics, Bloomberg School of Public Health, Johns Hopkins University, Baltimore, MD
%\\
%\bf{2} Department of Neurology, Division of Brain Injury Outcomes,  Johns Hopkins Medical Institutions, Baltimore, MD
%\\
%\bf{3} Department of Neurosurgery, David Geffen School of Medicine at UCLA, Los Angeles, CA
%\\
%%\bf{4} Section of Neurosurgery and the Neurovascular Surgery Program, University of Chicago Pritzker School of Medicine, Chicago, IL
%%\\
%$\ast$ E-mail: jmusche1@jhu.edu
%\end{flushleft}
%

\newif\ifseverity
\severitytrue
\chapter{Quantitative Localization of Supratentorial Intracranial Hemorrhage}
\label{chap:stroke}


%% Please keep the abstract between 250 and 300 words
%\section{Abstract}
%
%
%\subsection{Background and Purpose}
%Standard radiologic description of intracranial hemorrhage (ICH) location is subjective and qualitative.  Using registration of computed tomography (CT) brain images, we provide objective, detailed quantification of ICH location.
%
%\subsection{Methods}
%We analyzed images from patients ($N{=}\Sexpr{N}$) enrolled in the MISTIE (Minimally Invasive Surgery plus recombinant-tissue plasminogen activator for Intracerebral Evacuation) trial.  We registered CT scans to a CT template, estimated a 3-dimensional map of ICH engagement location, and estimated areas of ICH engagement. 
%
%\subsection{Results}
%In this sample, ICH primarily located in deep brain nuclei and lobar white matter, including the insula, superior temporal gyrus, and the putamen.
%
%\subsection{Conclusions}
%Objective measures of ICH location and engagement using advanced CT imaging processing provide finer, objective, and more quantitative anatomic information than that provided by human readers. 
%
%\subsection{Clinical Trial Registration Information}
%Clinical Trial Registration-URL: \url{http://www.clinicaltrials.gov}. Unique identifier: NCT00224770.
%
%
%{\bf Keywords:} Intracerebral Hemorrhage; CT and MRI
%
%\newpage

\section{Introduction}

Intracranial hemorrhage (ICH) results from a blood vessel rupturing into brain tissues and possibly the ventricles. The classification and quantitative descriptions of hemorrhage location using X-ray computed tomography (CT) is complicated: it may extend into multiple brain areas, distend tissues, and break through the ventricular wall. Therefore, routine practice identifies one primary affected anatomic region (e.g.~caudate) \citep{mendelow_early_2013, anderson_intensive_2008, antihypertensive_treatment_of_acute_cerebral_hemorrhage_atach_investigators_antihypertensive_2010} or describes the hemorrhage in relation to a landmark \citep{ziai_multicenter_2014}.

Detailed localization information can be obtained, however, by registering scans to a common template where labeled brain atlases are available. After registration, each patient scan is located in the same stereotaxic template space so information may be combined spatially across scans. We registered CT images to a previously-published CT template \citep{rorden_age-specific_2012}, located in MNI (Montreal Neurological Institute) space, using the provided software. 

Our goal is to quantitatively and objectively characterize ICH location\ifseverity
, compare this characterization to human labeling, and predict stroke severity scores using ICH location information. 
\else
.
\fi


\section{Methods}

To achieve this goal, we 1) created a 3-dimensional (3D) density map of supratentorial hemorrhages\ifseverity
, 
\else
 and 
\fi 2) provided detailed quantification of hemorrhage engagement of individual neuroanatomic regions\ifseverity
, 3) performed voxel-wise tests of ICH location on 2 severity scores: Glasgow Coma Scale (GCS) and National Institutes of Health Stroke Scale (NIHSS) and 4) summarized significantly predictive voxel regions into patient-level covariates.
\else 
.
\fi



\subsection{Subjects and Demographics}
The population studied consists of \Sexpr{N} patients from the MISTIE (Minimally Invasive Surgery plus recombinant-tissue plasminogen activator for Intracerebral Evacuation) \citep{morgan_preliminary_2008} trial recruited from \Sexpr{n.ctr} centers with lobar and deep ICHs $\geq$20mL in volume.    This sample was $\Sexpr{female}$\% female with mean (SD) age of \Sexpr{mean.sd(demog$Age)} years.

% Descriptive demographics of age, sex, race, and baseline ICH and intraventricular hemorrhage (IVH) volumes are shown in Table~\ref{t:dem}.  

% CT and clinical data were collected as part of the Johns Hopkins Medicine IRB-approved MISTIE research studies with written consent from participants. 

\thickmuskip=0mu

\subsection{Imaging Data}
Standard diagnostic CT images were acquired under a standard protocol but with differences across sites.  Scans were acquired using \Sexpr{manu[1]} ($N{=}\Sexpr{man.tab[1]}$), \Sexpr{manu[2]} ($N{=}\Sexpr{man.tab[2]}$), \Sexpr{manu[3]} ($N{=}\Sexpr{man.tab[3]}$), and \Sexpr{manu[4]} ($N{=}\Sexpr{man.tab[4]}$) scanners, had gantry tilt ($N{=}\Sexpr{n.gant}$), and the slice thickness of the image varied within some scans ($N{=}\Sexpr{n.var.slice}$). Therefore, the scans analyzed had different voxel (volume element) dimensions and image resolution prior to registration to the template. 
%These conditions represent a pragmatic sample of stroke center diagnostic imaging.
\thickmuskip=5mu plus 5mu


\subsection{Hemorrhage Segmentation and Location Identification}
ICH was manually segmented using the OsiriX (v.4.1, Pixmeo; Geneva, Switzerland) by expert readers.  Readers employed a semi-automated approach: a Hounsfield unit range of $40$ to $80$ selected potential regions of ICH \citep{bergstrom_variation_1977, smith_imaging_2006}, then these regions were manually adjusted. Readers identified the anatomic location most engaged by the ICH: \Sexpr{clottab}.  The initial mean (SD) ICH volume of this sample was \Sexpr{mean.sd(demog$Diagnostic_ICH)} mL.


\subsection{Image Registration}
The brain image was spatially registered to the CT template using the Clinical toolbox \citep{rorden_age-specific_2012} and the statistical parametric mapping software (SPM8, Wellcome Trust Centre for Neuroimaging, London, UK) in MATLAB (Mathworks, Natick, Massachusetts, USA).  The binary hemorrhage mask was transformed into the template space. No scans were excluded due to inadequate registration, determined by visual inspection.


\subsection{ICH Localization and Engagement}
\label{sec:engage}
We estimated a 3D histogram of ICH localization: for every voxel in template space, we calculated the proportion of patients who have an ICH at that particular voxel.  
 
%Although prediction of severity score is of interest, standard practice conveys information based on known neuroanatomic regions.  
We calculated spatial ICH engagement by neuroanatomic region using the ``Eve" atlas \citep{oishi_human_2008}, which segments gray matter (GM) and white matter (WM) regions.  
Ventricular regions were not explicitly segmented in the Eve atlas.  Any region not classified was reported as cerebrospinal fluid (CSF).


From this atlas, we estimated ICH engagement at the population level: 1) the percent of the ICH engaged by region (e.g.~putamen engages 20\% of the ICH) and 2) the percent of each region engaged by the ICH (e.g.~ICH engages 78\% of the putamen).  These summaries of ICH engagement provide a finer description than one location (e.g.~putamen).  

\ifseverity
In the study population, \Sexpr{formatC(all.nvox, digits=7, big.mark=",")} voxels (denoted by $V$) had at least one patient with ICH.  We limited our analysis to voxels in the template space where at least \Sexpr{ncut} patients exhibit ICH (\Sexpr{formatC(nvox, digits=6, big.mark=",")} voxels) to optimize the models for a substantial proportion of the study population.

We tested the association between hemorrhage location and stroke severity by running voxel-wise t-tests, testing the null hypothesis $H_{0}(v):\mu_{1}(v)=\mu_{0}(v)$, where $\mu_{1}(v)$ corresponds to the mean score (NIHSS or GCS) in patients where $ICH{=}1$ at voxel $v$, similarly for $\mu_{0}(v)$. 

<<>>=
### just getting the N and percent for each location
xx = load('Regress_ROI_NIHSS_Results.Rda')
out2 = out = ""
LLEV = length(loc.levs)
loc.levs = revalue(loc.levs, c("Lobar"="Putamen", "Putamen"="Lobar"))
com = ifelse(LLEV == 2, "", ",")
for (ilev in seq_along(loc.levs)){
    lev = loc.levs[ilev]
    n = loc.tab[lev]
    pct = loc.ptab[ilev]
    if (ilev == LLEV) {
        out = paste0(out, "and ")
        out2 = paste0(out2, 'and ')
    }
    out = paste0(out, lev, " ($N=", n, "$)", com, " ")
    out2 = paste0(out2, lev, com, " ")
}
out = str_trim(out)
out2 = str_trim(out2)
out = gsub(",$", "", out)
out2 = gsub(",$", "", out2)
out2= tolower(out2)
rm(list=xx)
@
We created a patient-level covariate that summarizes ICH location information by selecting regions using a sequence of nested p-value thresholds.  We call these regions ``highest predictive regions'' (HPR) because they contain the voxels that are most predictive of the severity scores. 
We obtained $6$ different HPR, $3$ based on the smallest $1000$, $2000$, or $3000$ lowest p-values and three based on p-values thresholds of $.05$, $.01$, and $.001$. For each HPR, we calculated the HPR ``coverage" for scan $i$: 
$$
\text{HPR Coverage}_i = \frac{\text{\# Voxels classified ICH in HPR for scan } i}{\text{\# Voxels in HPR}} \times 100\% \nonumber
$$
and used this as a predictor of the severity score ($Y_i$), adjusting for age, sex, and baseline ICH volume (ICHVol):
\begin{equation}
{\rm Y}_i = \beta_0 + \beta_1 {\rm Coverage}_i + \gamma_1{\rm Age}_i  +\gamma_2{\rm Sex}_i +\gamma_3{\rm ICHVol}_i + \epsilon_{i} \label{eq:cov}
\end{equation}
\thickmuskip=0mu
We compared model~\eqref{eq:cov} using adjusted $R^2$ to one using a categorical indicator of the expert-specified ICH location, with categories: \Sexpr{out2}.  
A permutation test was used: the severity score was randomly permuted, the HPR was estimated, and the adjusted $R^2$ was calculated. The p-value was obtained by comparing the distribution of permuted adjusted $R^2$ with the estimated adjusted $R^2$ from the HPR model. 
\fi
\section{Results}

\subsection{Prevalence of ICH Engagement in the Brain}

Figure~\ref{fig:StrokeHist} represents the 3D histogram of hemorrhage prevalence, where colors represent the percentage of patients with ICH engagement at that voxel.  ICH is distributed medially in the brain in this cohort, with a lower concentration at the cortical surface and higher on the left side of the brain.   The majority of voxels have a low prevalence of ICH engagement; the median number of patients with ICH at a voxel is \Sexpr{n.md.prop} (\Sexpr{md.prop}\%), though some voxels ($V{=}\Sexpr{nvox40}$) have a high prevalence of ${>}40\%$ of the sample population.  


\thickmuskip=5mu plus 5mu

%***
%Combining regions of engagement from the left and right sides of the brain is worthwhile as regions will likely affect severity regardless of the hemisphere engaged. We did not combine these areas, as it may not be straightforward to combine ICH that crosses the mid-sagittal plane. We did attempt to ``symmetrize'' the HPR by including voxels regardless of the side of the brain.  If a voxel on the left side of the brain was included in the HPR, the corresponding voxel on the right side was included in the symmetrized HPR.  We observed similar patterns to Figure 3C and 3D using the symmetrized HPR  (see \url{http://stroke.ahajournals.org}).


\subsubsection{ICH Localization and Engagement}
Table~\ref{t:breakdown} represents the 10 most-engaged regions for the population 3D histogram.  The engagement represents the percent engagement of a specific area compared to all areas engaged.  The 3D histogram of ICH is engaged in areas of the insula, putamen, and primarily the CSF (i.e.~ventricles and subarachnoid spaces). 

We also calculated the engagement of the thalamus, putamen, and globus pallidus by the population 3D histogram.  The population engagement represents the mean proportion of ICH prevalence in the population for that brain region.  On average, 23\% of the putamen, 20\% of the globus pallidus, and 8\% of the thalamus are engaged with ICH from patients in this study. 

Registering images with large deformations caused by the hemorrhage, even those using non-linear registration, will likely have mis-registration artifacts.  Lateral shift caused by the hemorrhage, resulting in compression of ventricles, may lead to mapping some areas of the hemorrhage or tissue to the ventricles in template space.  Combining multiple registration approaches may achieve better results.



\ifseverity
\subsubsection{Highest Predictive Region Analysis}

<<>>=
load('Regress_ROI_NIHSS_Results.Rda')
res = reses$adj.r.squared
res = res[, c("pval", "nkeep")]
res = data.frame(res)
# res$nkeep = sprintf("%.0f", res$nkeep)
fc = function(x) {
	formatC(x, digits=6, big.mark=",")
}
res$nkeep = fc(res$nkeep)

@

<<>>=
load('Regress_ROI_GCS_Results.Rda')
gres = reses$adj.r.squared
gres = gres[, c("pval", "nkeep")]
gres = data.frame(gres)
# gres$nkeep = sprintf("%.0f", gres$nkeep)
gres$nkeep = fc(gres$nkeep)

@
\thinmuskip=0mu


For illustration, panel (\protect\subref*{pvals:nihss}) in Figure~\ref{f:roi} displays the region of p-values smaller than $.01$ for the voxel-wise t-tests of NIHSS and panel~(\protect\subref*{pvals:gcs}) displays voxels with the smallest $1000$ p-values testing GCS score. These regions were the HPR with the highest adjusted $R^2$ in \eqref{eq:cov}. We show three orthographic slices for each HPR; the entire regions are available in MNI coordinates. 
\thinmuskip=3mu

Figure~\ref{f:roi}\protect\subref*{pvals:regnihss} displays the NIHSS score as a function of the coverage of the HPR from Figure~\ref{f:roi}\protect\subref*{pvals:nihss}. Similarly, Figure~\ref{f:roi}\protect\subref*{pvals:reggcs} displays the GCS score as a function of the coverage of the HPR in Figure~\ref{f:roi}\protect\subref*{pvals:gcs}.  The blue line represents a non-parametric LOESS (local regression) \citep{cleveland_local_1992} fit and the red line represents an unadjusted linear model fit.  As expected, the larger the HPR coverage the higher (more severe stroke) the NIHSS score and the lower (deeper unconsciousness) the GCS score.

Adjusted $R^2$ model estimates indicated all HPR coverage models strongly outperform reader-classified location models: the adjusted $R^2$ almost doubled from $\Sexpr{nihss.locar2}$  for the reader-classified location model to $\Sexpr{nihss.bestar2}$ for NIHSS; the adjusted $R^2$ more than tripled from $\Sexpr{gcs.locar2}$ for the reader-classified location model to $\Sexpr{gcs.bestar2}$ for the HPR coverage model for GCS. 

The permutation test p-values were $<.001$ for HPR of NIHSS and $<.01$ for HPR of GCS, indicating that the selected HPRs were more predictive than HPRs obtained using the same selection procedure when there is no association between location and stroke severity scores. 
\fi

\section{Discussion}

We have characterized the localization of ICH in a population from prospective clinical trial images using a 3D histogram. We found the well-described medial location of most supratentorial ICHs.   We can create 3D histograms based on subgroups or different study populations and test differences between groups at a voxel level using proportion tests, allowing a fine-scale comparison ICH location across groups.

We also demonstrate how labeled atlases can automatically describe ICH engagement by neuroanatomic regions at a patient or population level. These measures are more interpretable for clinical relevance and may translate to better determination of disability.


\subsection{Summary}
The summary of Eve-atlas ICH engagement presented provided a finer description of location than previously possible by human readers. This type of analysis provides a framework for derivation and testing measures of ICH engagement.  We hope this method will engage others with larger data sets and methodological skills to enhance the use of quantitative localization. 



\section{Sources of Funding}
The project described was supported by the grant RO1EB012547 (NIH), T32AG000247 (NIA), R01NS046309, RO1NS060910, RO1NS085211, R01NS046309, U01NS080824 and U01NS062851 (NINDS), and RO1MH095836 (NIMH).

\section{Disclosures}
Johns Hopkins University holds a use patent for intraventricular tissue plasminogen activator.



% \section{Acknowledgments}


%\clearpage
%\newpage
%\thispagestyle{empty}
%\pagestyle{plain}
%
%% \bibliographystyle{plainnat}
%% \bibliography{CT_Pipeline}
%\defbibheading{myheading}[References]{%
%  \section{#1}}
%\printbibliography[heading=myheading]
  
%\printbibliography[title=References]




\clearpage
\newpage
\thispagestyle{empty}
\pagestyle{plain}


\section{Tables}


%\input{demographics.tex}


<<make_breakdown>>=

load("Top_0.01_Pvalues_df.Rda")
n = 10
nihss.tab = head(pvalimg.tab[["EVE_1"]], n)
nihss.tab$nvox = sprintf("%02.1f", nihss.tab$nvox)
nihss.tab = nihss.tab[, c("nvox", "area")]
names(nihss.tab) = c("NIHSS HPR", "Area")

load("GCS_Top_1000_Pvalues_df.Rda")
gcs.tab = head(pvalimg.tab[["EVE_1"]], n)
gcs.tab = gcs.tab[, c("nvox", "area")]
gcs.tab$nvox = sprintf("%02.1f", gcs.tab$nvox)
names(gcs.tab) = c("GCS HPR", "Area")

load("Population_Table.Rda")
pop.tab = head(xtabs[["EVE_1"]], n)
pop.tab = pop.tab[, c("Area", "EVE_1")]
pop.tab$EVE_1 = sprintf("%02.1f", pop.tab$EVE_1)

names(pop.tab) = c("Area", "Population Prevalence")
pop.tab$Area = revalue(pop.tab$Area, c("Ventricles" = "Background"))
# names(jhut1.list)[names(jhut1.list) == "Background"] = "Ventricles"


df = merge(pop.tab, nihss.tab, sort=FALSE, all = TRUE)
df = merge(df, gcs.tab, sort=FALSE, all = TRUE)


proper = function(x){
  substring(x, 1, 1) <- toupper(substring(x, 1, 1))
  substring(x, 2) <- tolower(substring(x, 2))
  x
}

df$Area = proper(df$Area)
df$Area = revalue(df$Area, c("Background" = "CSF (ventricular & subarachnoid spaces)",
"Insular" = "Insula"))
# df$Area = revalue(df$Area, c("Csf" = "CSF (ventricular & subarachnoid spaces)"))
df$Area = gsub("_", " ", df$Area)
df = df[order(as.numeric(df$"Population Prevalence"), 
              as.numeric(df[, "NIHSS HPR"]), 
              as.numeric(df[, "GCS HPR"]), 
              decreasing=TRUE),]
df[sapply(df, is.na)] = ""
rownames(df) = NULL

xtab = xtable(df)

fullcap = paste0("Distribution of the top 10 areas of engagement ",
                       "for population ",
                       " 3D histogram, the NIHSS HPR based on a p-value ",
                       " threshold of .01, the GCS HPR based on voxels ",
                       "with 1000 smallest p-values.  Each value represents ", 
                       "the percentage of the HPR engaged in this area.  ",
                       "The population-level areas are percentages ",
                       "weighted by proportion. Each distribution ",
                       " of areas is based on the Eve atlas.  ",
                       "We see that the population is engaged in ",
                       "areas of the CSF, such as the ventricles, and ",
                       " the insula and putaminal regions.",
                       " The HPR based on the NIHSS analysis engages ",
                       "primarily areas of the internal capsule ",
                       "and CSF regions. ",                       
                       "The HPR based on the GCS analysis engages ",
                       "primarily the thalamus and superior ",
                       "corona radiata. ",
                       "These percentages  ", 
                       " can be calculated on a per-scan level as well.")
fullcap = NULL 
fullcap = "Percent engagement of the 3D histogram and top-performing HPR for the top 10 areas of engagement"          
xtab = xtable(df, 
              caption= fullcap, 
              align=c("llccc"),
              label="t:breakdown")
print.xtable(xtab, file="breakdown.tex", include.rownames = FALSE)
save(df, file = "all_breakdown.rda")

@


<<make_colbreakdown>>=

load("collapsed_pvalues_df/Top_0.01_Pvalues_df.Rda")
n = 10
nihss.tab = head(col.pvalimg.tab[["EVE_1"]], n)
nihss.tab$nvox = sprintf("%02.1f", nihss.tab$nvox)
nihss.tab = nihss.tab[, c("nvox", "area")]
names(nihss.tab) = c("NIHSS HPR", "Area")

load("collapsed_pvalues_df/GCS_Top_1000_Pvalues_df.Rda")
gcs.tab = head(col.pvalimg.tab[["EVE_1"]], n)
gcs.tab = gcs.tab[, c("nvox", "area")]
gcs.tab$nvox = sprintf("%02.1f", gcs.tab$nvox)
names(gcs.tab) = c("GCS HPR", "Area")

load("collapsed_pvalues_df/Population_Table.Rda")
pop.tab = head(col.xtabs[["EVE_1"]], n)
pop.tab = pop.tab[, c("Area", "EVE_1")]
pop.tab$EVE_1 = sprintf("%02.1f", pop.tab$EVE_1)

names(pop.tab) = c("Area", "Population Prevalence")
pop.tab$Area = revalue(pop.tab$Area, c("Ventricles" = "Background"))
# names(jhut1.list)[names(jhut1.list) == "Background"] = "Ventricles"

gcs.tab$Area = revalue(gcs.tab$Area, c("Background" = "CSF (ventricular & subarachnoid spaces)"))
nihss.tab$Area = revalue(nihss.tab$Area, c("Background" = "CSF (ventricular & subarachnoid spaces)"))

df = pop.tab
# df = merge(pop.tab, nihss.tab, sort=FALSE, all = TRUE)
# df = merge(df, gcs.tab, sort=FALSE, all = TRUE)


proper = function(x){
  substring(x, 1, 1) <- toupper(substring(x, 1, 1))
  substring(x, 2) <- tolower(substring(x, 2))
  x
}

df$Area = proper(df$Area)
df$Area = revalue(df$Area, c("Background" = "CSF (ventricular & subarachnoid spaces)"))
df$Area = revalue(df$Area, c("Csf" = "CSF (ventricular & subarachnoid spaces)"))
df$Area = gsub("_", " ", df$Area)
df$Area = gsub(" wm( |)", " WM ", df$Area)
df$Area = str_trim(df$Area)
df = df[order(as.numeric(df$"Population Prevalence"), 
#              as.numeric(df[, "NIHSS HPR"]), 
#              as.numeric(df[, "GCS HPR"]), 
              decreasing=TRUE),]
df[sapply(df, is.na)] = ""
rownames(df) = NULL

xtab = xtable(df)

fullcap = paste0("{\\bf Distribution of the Top 10 Areas of Engagement.}", 
"Distribution of the top 10 areas of engagement ",
                       "for population ",
                       " 3D histogram, the NIHSS HPR based on a p-value ",
                       " threshold of .01, the GCS HPR based on voxels ",
                       "with 1000 smallest p-values.  Each value represents ", 
                       "the percentage of the HPR engaged in this area.  ",
                       "The population-level areas are percentages ",
                       "weighted by proportion. Each distribution ",
                       " of areas is based on the Eve atlas.  ",
                       "We see that the population is engaged in ",
                       "areas of the CSF, such as the ventricles, and ",
                       " the insula and putaminal regions.",
                       " The HPR based on the NIHSS analysis engages ",
                       "primarily areas of the internal capsule, thalamus, superior corona radiata, ",
                       "and ventricular regions. ",                       
                       "The HPR based on the GCS analysis engages ",
                       "primarily the thalamus and superior ",
                       "corona radiata. ",
                       "These percentages  ", 
                       " can be calculated on a per-scan level as well.")
fullcap = NULL
fullcap = "{\\bf Distribution of the Top 10 Areas of Engagement of Highest Predictive Regions.}"
xtab = xtable(df, 
              caption = fullcap, 
              align=c("llc"),
              label="t:breakdown")
print.xtable(xtab, file="../colbreakdown.tex", include.rownames = FALSE)
save(df, file = "colbreakdown.rda")
@

%\input{breakdown.tex}
\input{colbreakdown.tex}


<<make_area_breakdown>>=
proper = function(x){
  substring(x, 1, 1) <- toupper(substring(x, 1, 1))
  substring(x, 2) <- tolower(substring(x, 2))
  x
}


make.area = function(x, cn){
	x = data.frame(x)
	x$Area = rownames(x)
	x = x[, c("EVE_1", "Area"), drop=FALSE]	
	x$EVE_1 = sprintf("%02.1f", x$EVE_1 * 100)
	
	colnames(x) = c(cn, "Area")
	x
}

load("Top_0.01_Pvalues_df.Rda")
nihss.tab = pvalimg.tab[["EVE_1"]]
nihss.tab = nihss.tab[order(nihss.tab$roi_mean_pct, decreasing=TRUE),]
nihss.tab = nihss.tab[, c("roi_mean_pct", "area")]
nihss.tab$roi_mean_pct = sprintf("%02.1f", nihss.tab$roi_mean_pct)
names(nihss.tab) = c("NIHSS HPR", "Area")
nihss.ppct = make.area(ppcts, "NIHSS HPR")

load("GCS_Top_1000_Pvalues_df.Rda")
gcs.tab = pvalimg.tab[["EVE_1"]]
gcs.tab = gcs.tab[order(gcs.tab$roi_mean_pct, decreasing=TRUE),]
gcs.tab = gcs.tab[, c("roi_mean_pct", "area")]
gcs.tab$roi_mean_pct = sprintf("%02.1f", gcs.tab$roi_mean_pct)
names(gcs.tab) = c("GCS HPR", "Area")
gcs.ppct = make.area(ppcts, "GCS HPR")

load("Population_Table.Rda")
pop.tab = dfs[["EVE_1"]]
pop.tab = pop.tab[order(pop.tab$EVE_1_ROI_Pct, decreasing=TRUE),]
pop.tab = pop.tab[, c("EVE_1_ROI_Pct", "Area")]
pop.tab$EVE_1_ROI_Pct = sprintf("%02.1f", pop.tab$EVE_1_ROI_Pct)
names(pop.tab) = c("Population Engagement", "Area")
pop.pcts = make.area(pop.pcts, "Population Engagement")


makedf = function(df){
	df = df[
	  grep("GLOBUS_PALLIDUS|THALAMUS|PUTAMEN", df$Area),]
	
	
	df$Area = proper(df$Area)
	df$Area = revalue(df$Area, c("Background" = "CSF (ventricular & subarachnoid spaces)"), 
	                  warn_missing = FALSE)
	df$Area = gsub("_", " ", df$Area)
	df = df[order(df$Area),]
	
	df[sapply(df, is.na)] = ""
	rownames(df) = NULL
	df
}


df = merge(pop.tab, nihss.tab, sort=FALSE, all = TRUE)
df = merge(df, gcs.tab, sort=FALSE, all = TRUE)
df = makedf(df)


col.df = merge(pop.pcts, nihss.ppct, sort=FALSE, all = TRUE)
col.df = merge(col.df, gcs.ppct, sort=FALSE, all = TRUE)
col.df = makedf(col.df)

col.df$Area = paste0(col.df$Area, ": Total")
df$Area = gsub(" left", ": Left", df$Area)
df$Area = gsub(" right", ": Right", df$Area)

m = merge(df, col.df, all=TRUE)
m$Area = gsub("pallidus", "Pallidus", m$Area)
m$A = sapply(strsplit(m$Area, ":"), `[`, 1)
m$S = 3:1
m = m[order(m$A, m$S),]

# xtab = xtable(m)

cn = colnames(m)
cn = cn[ !(cn %in% c("A", "S"))]

fullcap =                 paste0("Engagement of the Thalamus, Putamen and Globus Pallidus by the",
                       " population ",
                       " 3D histogram, the NIHSS HPR based on a p-value ",
                       " threshold of $.01$, the GCS HPR based on voxels ",
                       "with $1000$ smallest p-values.  Each distribution ",
                       " is based on the Eve atlas.  The population engagement represents the ", 
                       "mean proportion of engagement for that brain region over all patient ICH masks.  ",
                       "The HPR columns represent the percent of voxels in that brain region that ",
                       " are in the HPR for NIHSS and GCS scores.  ",
	                  " On average, $23\\%$ of the Putamen, $20\\%$ of the Globus Pallidus, and $8\\%$ of the Thalamus are ",
                       " engaged with ICH from patients in this study.  The HPR from the NIHSS analysis engages $40\\%$ of",
                       " the Globus Pallidus, $6\\%$ of the Putamen, and $9\\%$ of the Thalamus.  The HPR from the GCS analysis",
                       " engages only $2\\%$ of the Thalamus, but not the Putamen nor the Globus Pallidus; the GCS HPR is only",
                       " $1000$ voxels.  All engagement is higher on the left side compared to the right. ",
                       "The Eve ", 
                       "atlas can be used to calculate area engagement",
                       " on a per-scan level as well to give, for example, putaminal engagement with ICH at a scan level. ")
fullcap = NULL
fullcap = "Thalamus, Putamen and Globus Pallidus ICH Engagement by the population and NIHSS/GCS HPR"
xtab = xtable(m[, cn], 
              caption= fullcap, 
              align=c("llccc"),
              label="t:area_breakdown")
print.xtable(xtab, file="area_breakdown.tex", include.rownames = FALSE)

@

\clearpage
\newpage

\section{Figures}

\setcounter{figure}{0}


\begin{figure}[H]
\centering
  \subfloat{
  \label{prop:img}	
	\includegraphics[width=.98\textwidth]{Figure4_Proportion_Final.png}
}
\caption[{\bf ICH Engagement Prevalence.}]{{\bf ICH Engagement Prevalence.} The proportion of patients with ICH engaging a given voxel are represented in a 3D histogram (right side of image is left side of brain) overlaid on an MRI T1 template. There is a higher prevalence of ICH on the left side of the brain, localized in the middle of the brain, with few extensions in the anterior and posterior areas. The interactive version of this figure is located at \url{http://muschellij2.github.io/CT_Pipeline/index.html}.}
  \label{fig:StrokeHist}
\end{figure}



\ifseverity
\begin{figure}[H]
\centering
  \hfill
  \subfloat{
 \label{pvals:nihss}
 \includegraphics[width=.48\textwidth]{{Top_0.01_pvalues_Final}.png}
 }
  \hfill
  \subfloat{
 \label{pvals:gcs} 
 \includegraphics[width=.48\textwidth]{GCS_Top_1000_pvalues_Final.png}
 } 
 \newline
  \hfill
  \subfloat{
 \label{pvals:regnihss}
 \includegraphics[width=.48\textwidth]{Regress_ROI_NIHSS_Best_Model.png}
 }
  \hfill
  \subfloat{
 \label{pvals:reggcs}
 \includegraphics[width=.48\textwidth]{Regress_ROI_GCS_Best_Model.png}
 }  
  \caption[{\bf Highest Predictive Region (HPR) Analysis.}]{{\bf Highest Predictive Region (HPR) Analysis.}  Panels~\protect\subref{pvals:nihss} and~\protect\subref{pvals:gcs} correspond to the HPR for the top-performing model for NIHSS and GCS scores.  The HPR in \protect\subref{pvals:nihss} represents a p-value threshold of $\Sexpr{nihss.best$"P-value"}$ ($\Sexpr{nihss.best$"Number of Voxels"}$ voxels) for the voxel-wise p-value of ICH on NIHSS. The HPR in \protect\subref{pvals:gcs} represents $\Sexpr{gcs.best[["Number of Voxels"]]}$ with the lowest p-values for the voxel-wise ICH on GCS score regressions.
    Panels~\protect\subref{pvals:regnihss} and~\protect\subref{pvals:reggcs} plot the relationship of the HPR coverage and severity score.  The red line represents a linear fit, the blue line--a LOESS fit.  The larger the HPR coverage the higher (more severe) the NIHSS and the lower (deeper unconsciousness) the GCS.
}
  \label{f:roi}
\end{figure}
\fi



%
%\clearpage
%\newpage
%
%\thispagestyle{empty}
%\pagestyle{plain}
%
%\setcounter{figure}{0}
%\renewcommand{\thefigure}{\Roman{figure}}
%\setcounter{table}{0}
%\renewcommand{\thetable}{\Roman{table}}

